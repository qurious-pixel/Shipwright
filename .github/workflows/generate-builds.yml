name: generate-builds
on:
  push:
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  generate-soh-otr:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2.11
      with:
        key: ${{ runner.os }}-otr-ccache-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-otr-ccache-${{ github.ref }}
          ${{ runner.os }}-otr-ccache-
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y $(cat .github/workflows/apt-deps.txt)
    - name: Cache build folders
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-otr-build-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-otr-build-${{ github.ref }}
          ${{ runner.os }}-otr-build-
        path: |
          build-cmake
          SDL2-2.28.5
    - name: Install latest SDL
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        if [ ! -d "SDL2-2.28.5" ]; then
          wget https://www.libsdl.org/release/SDL2-2.28.5.tar.gz
          tar -xzf SDL2-2.28.5.tar.gz
        fi
        cd SDL2-2.28.5
        ./configure --enable-hidapi-libusb
        make -j 10
        sudo make install
        sudo cp -av /usr/local/lib/libSDL* /lib/x86_64-linux-gnu/
    - name: Install latest tinyxml2
      run: |
        sudo apt-get remove libtinyxml2-dev
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        if [ ! -d "tinyxml2-10.0.0" ]; then
          wget https://github.com/leethomason/tinyxml2/archive/refs/tags/10.0.0.tar.gz
          tar -xzf 10.0.0.tar.gz
        fi
        cd tinyxml2-10.0.0
        mkdir build
        cd build
        cmake ..
        make
        sudo make install
    - name: Generate soh.otr
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        cmake --no-warn-unused-cli -H. -Bbuild-cmake -GNinja -DCMAKE_BUILD_TYPE:STRING=Release
        cmake --build build-cmake --config Release --target GenerateSohOtr
    - uses: actions/upload-artifact@v4
      with:
        name: soh.otr
        path: soh.otr
        retention-days: 1
  build-linux:
    needs: generate-soh-otr
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
    steps:
    - name: Install dependencies
      run: |
        apk update
        apk add gcc g++ git make cmake samurai tar sdl2-dev libpng-dev libzip-dev nlohmann-json spdlog-dev sdl2_net-dev boost-dev lsb-release-minimal imagemagick python3
    - name: Install latest tinyxml2
      run: |
        wget https://github.com/leethomason/tinyxml2/archive/refs/tags/10.0.0.tar.gz
        tar -xzf 10.0.0.tar.gz
        cd tinyxml2-10.0.0
        mkdir build
        cd build
        cmake ..
        make && make install
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Build SoH
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        cmake --no-warn-unused-cli -H. -Bbuild-cmake -GNinja -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_REMOTE_CONTROL=1
        cmake --build build-cmake --config Release --target GenerateSohOtr
        cmake --build build-cmake --config Release -j3
        (cd build-cmake && cpack -G External)

        mv README.md readme.txt
        mv build-cmake/*.appimage soh.appimage
      env:
        CC: gcc
        CXX: g++
    - name: Upload build
      uses: actions/upload-artifact@v4
      with:
        name: soh-linux
        path: |
          soh.appimage
          readme.txt
